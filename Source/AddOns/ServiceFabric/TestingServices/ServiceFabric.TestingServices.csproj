<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\..\..\..\Build\common.props" />
  <Import Project="..\..\..\..\Build\key.props" />
  <PropertyGroup>
    <AssemblyName>Microsoft.PSharp.ServiceFabric.TestingServices</AssemblyName>
    <Description>The P# testing services for Azure Service Fabric.</Description>
    <RootNamespace>Microsoft.PSharp.ServiceFabric.TestingServices</RootNamespace>
    <TargetFrameworks>net46</TargetFrameworks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageTags>state-machines;systematic-testing;dotnet;csharp;azure;service-fabric</PackageTags>
    <Platforms>AnyCPU;x64</Platforms>
    <OutputPath>..\..\bin\</OutputPath>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.ServiceFabric" Version="6.2.306" />
    <PackageReference Include="Microsoft.ServiceFabric.Data" Version="3.1.306" />
    <PackageReference Include="Microsoft.ServiceFabric.Data.Extensions" Version="1.3.306" />
    <PackageReference Include="Microsoft.ServiceFabric.Data.Interfaces" Version="3.1.306" />
    <PackageReference Include="Microsoft.ServiceFabric.Services.Remoting" Version="3.1.306" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Runtime\ServiceFabric.csproj" />
    <ProjectReference Include="..\..\..\Core\Core.csproj" />
    <ProjectReference Include="..\..\..\TestingServices\TestingServices.csproj" />
    <!-- Ideally we want this to be pluggable via some abstraction but for Hackathon sake adding a project reference -->
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System.ServiceModel" />
  </ItemGroup>
</Project>