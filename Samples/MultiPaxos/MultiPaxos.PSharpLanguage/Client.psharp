// ------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
// ------------------------------------------------------------------------------------------------

using System.Collections.Generic;

namespace MultiPaxos.PSharpLanguage
{
    machine Client
    {
	    List<machine> Servers;

		start state Init
        {
            on local goto PumpRequestOne;
			on clientConfig do Configure;
        }

		void Configure()
        {
			Servers = (trigger as clientConfig).nodes;
			raise(local);
        }

		state PumpRequestOne
		{
		    entry
			{
			    monitor<ValidityCheck>(monitor_client_sent, 1);

			    if (*)
				{
				    send(Servers[0], update, 0, 1);
				}
				else
				    send(Servers[Servers.Count - 1], update, 0, 1);

				raise(response);
			}

			on response goto PumpRequestTwo;
		}

		state PumpRequestTwo
		{
		    entry
			{
			    monitor<ValidityCheck>(monitor_client_sent, 2);

			    if (*)
				    send(Servers[0], update, 0, 2);
				else
				{
				    send(Servers[Servers.Count - 1], update, 0, 2);
				}

				raise(response);
			}

			on response goto Done;
		}

		state Done
		{

		}
    }
}
