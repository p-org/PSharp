// ------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License (MIT). See License.txt in the repo root for license information.
// ------------------------------------------------------------------------------------------------

namespace PingPong.PSharpLanguage
{
    /// <summary>
    /// This machine acts as a test harness. It models a network environment,
    /// by creating a 'Server' and a 'Client' machine.
    /// </summary>
    internal machine NetworkEnvironment
    {
        /// <summary>
        /// Each P# machine declares one or more machine states (or simply states).
        /// 
        /// One of the states must be declared as the initial state using the 'start'
        /// keyword. When the machine gets constructed, it will transition to the
        /// declared initial state.
        /// </summary>
        start state Init
        {
            /// A P# machine state can declare one or more action. This state declares an
            /// 'entry' action, which executes (asynchronously) when the machine transitions
            /// to the 'Init' state. Only one 'entry' action can be declared per machine state.
            entry
            {
                // Creates (asynchronously) a server machine.
                var server = create(Server);
                // Creates (asynchronously) a client machine, and passes the 'Config' event
                // as payload. 'Config' contains a reference to the server machine.
                create(Client, Client.Config, server);
            }
        }
    }
}
