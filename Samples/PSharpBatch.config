<?xml version="1.0"?>
<PSharpBatchConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">

	<!-- Id of the Azure Batch pool to be created if does not exists -->
	<PoolId>ExamplePoolId</PoolId>

	<!-- Prefix of the Job ID (a timestamp will be appended to it) -->
	<JobDefaultId>ExampleJobId</JobDefaultId>

	<!-- Prefix of the task id. (a timestamp will be appended to it) -->
	<TaskDefaultId>TaskIdPrefix</TaskDefaultId>

	<!-- Blob access key expiry hours. Enter -1 for infinite expiry hours. -->
	<BlobContainerExpiryHours>1</BlobContainerExpiryHours>

	<!-- Number of nodes to create (minimum of 2 nodes required) -->
	<NumberOfNodesInPool>2</NumberOfNodesInPool>

	<!-- Path to the PSharp Binaries folder -->
	<PSharpBinariesFolderPath>%PSharpBinaries%</PSharpBinariesFolderPath>

	<!-- Path to the output folder -->
	<OutputFolderPath>.\Output</OutputFolderPath>

	<!-- Wait time for monitoring tasks, beyond which the tasks will be terminated -->
	<TaskWaitHours>1</TaskWaitHours>

	<!-- Job deletion details -->
	<DeleteJobAfterDone>true</DeleteJobAfterDone>
	<DeleteContainerAfterDone>true</DeleteContainerAfterDone>
  
  <!-- Test run location -->
  <RunLocally>false</RunLocally>
  
  <Declarations>
    <Declare Name="Iterations" Value="2500"/>
    <Declare Name="MaxSteps" Value="100"/>
    <Declare Name="Parallelism" Value="4"/>
  </Declarations>

	<Tests>
		<!-- You can have multiple tests here. Each test will correspond to one binary -->
		<Test Name="Test1">
			<!-- Absolute path to the Binary or application to be tested -->
			<ApplicationPath>.\BoundedAsync\Binaries\Debug\BoundedAsync.PSharpLibrary.exe</ApplicationPath>
			<!-- Test 1 -->
			<!-- You can enter multiple commands here -->
			<!-- Command 1 -->
			<Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
		</Test>
    <Test Name="Test2">
      <!-- Absolute path to the Binary or application to be tested -->
      <ApplicationPath>.\CacheCoherence\Binaries\Debug\CacheCoherence.PSharpLibrary.exe</ApplicationPath>
      <!-- Test 1 -->
      <!-- You can enter multiple commands here -->
      <!-- Command 1 -->
      <Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
    </Test>
    <Test Name="Test3">
      <!-- Absolute path to the Binary or application to be tested -->
      <ApplicationPath>.\ChainReplication\Binaries\Debug\ChainReplication.PSharpLibrary.exe</ApplicationPath>
      <!-- Test 1 -->
      <!-- You can enter multiple commands here -->
      <!-- Command 1 -->
      <Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
    </Test>
    <Test Name="Test4">
      <!-- Absolute path to the Binary or application to be tested -->
      <ApplicationPath>.\Chord\Binaries\Debug\Chord.PSharpLibrary.exe</ApplicationPath>
      <!-- Test 1 -->
      <!-- You can enter multiple commands here -->
      <!-- Command 1 -->
      <Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
    </Test>
    <Test Name="Test5">
      <!-- Absolute path to the Binary or application to be tested -->
      <ApplicationPath>.\MultiPaxos\Binaries\Debug\MultiPaxos.PSharpLibrary.exe</ApplicationPath>
      <!-- Test 1 -->
      <!-- You can enter multiple commands here -->
      <!-- Command 1 -->
      <Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
    </Test>
    <Test Name="Test6">
      <!-- Absolute path to the Binary or application to be tested -->
      <ApplicationPath>.\Raft\Binaries\Debug\Raft.PSharpLibrary.exe</ApplicationPath>
      <!-- Test 1 -->
      <!-- You can enter multiple commands here -->
      <!-- Command 1 -->
      <Command Name="Command1" Flags="/i:%Iterations% /max-steps:%MaxSteps% /explore /sch:portfolio /parallel:%Parallelism%"/>
    </Test>
	</Tests>

</PSharpBatchConfig>
