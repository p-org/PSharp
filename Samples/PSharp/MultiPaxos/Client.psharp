using System.Collections.Generic;

namespace MultiPaxos
{
    model TestClient
    {
	    List<machine> Servers;

	    start state Init
		{
		    entry
			{
			    create(ValMachineCheck);

				Servers = (List<machine>)payload;

				raise(local);
			}

			on local goto PumpRequestOne;
		}

		state PumpRequestOne
		{
		    entry
			{
			    monitor<ValMachineCheck>(monitor_client_sent, 1);

			    if (*)
				{
				    send(Servers[0], update, 0, 1);
				}
				else
				    send(Servers[Servers.Count - 1], update, 0, 1);

				raise(response);
			}

			on response goto PumpRequestTwo;
		}

		state PumpRequestTwo
		{
		    entry
			{
			    monitor<ValMachineCheck>(monitor_client_sent, 2);

			    if (*)
				    send(Servers[0], update, 0, 2);
				else
				{
				    send(Servers[Servers.Count - 1], update, 0, 2);
				}

				raise(response);
			}

			on response goto Done;
		}

		state Done
		{

		}
    }

	machine Client
    {
	    List<machine> Servers;

	    start state Init
		{
		    entry
			{
				Servers = (List<machine>)payload;

				raise(local);
			}

			on local goto PumpRequest;
		}

		state PumpRequest
		{
		    entry
			{
			    send(Servers[0], update, 0, 1);
				raise(response);
			}

			on response goto Done;
		}

		state Done
		{

		}
    }
}
