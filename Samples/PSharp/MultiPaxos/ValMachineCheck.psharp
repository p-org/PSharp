using System.Collections.Generic;

namespace MultiPaxos
{
    monitor ValMachineCheck
    {
	    Dictionary<int, int> ClientSet;
		Dictionary<int, int> ProposedSet;

	    start state Init
		{
		    entry
			{
			    ClientSet = new Dictionary<int, int>();
				ProposedSet = new Dictionary<int, int>();
				raise(local);
			}

			on local goto Wait;
		}

		state Wait
		{
		    on monitor_client_sent do AddClientSet;
			on monitor_proposer_sent do AddProposerSet;
			on monitor_proposer_chosen do CheckChosenValMachineIty;
		}

		void AddClientSet()
		{
		    ClientSet[(int)payload] = 0;
		}
		
		void AddProposerSet()
		{
		    assert(ClientSet.ContainsKey((int)payload));

			if (!ProposedSet.ContainsKey((int)payload))
			{
			    ProposedSet.Add((int)payload, 0);
			}
			else
			{
			    ProposedSet[(int)payload] = 0;
			}
		}
		
		void CheckChosenValMachineIty()
		{
		    assert(ProposedSet.ContainsKey((int)payload));
		}
    }
}
